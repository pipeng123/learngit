/***********************************************************************
*  HEADER_START
*
*  	   $File Name: mc9s08lc60.prm$
*      Project:        Developper's HC08 Bootloader Slave
*      Description:    LC link parameter file
*      Platform:       HCS08
*      $Version: 6.0.2.0$
*      $Date: Aug-9-2007$ 
*      $Last Modified By: r30323$
*      Company:        Freescale Semiconductor
*      Security:       General Business
*
*  ===================================================================
*  Copyright (c):      Freescale Semiconductor, 2007, All rights reserved.
*
*  ===================================================================
*  THIS SOFTWARE IS PROVIDED BY FREESCALE "AS IS" AND ANY
*  EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
*  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
*  PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL FREESCALE OR
*  ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
*  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
*  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
*  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
*  HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
*  STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
*  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
*  OF THE POSSIBILITY OF SUCH DAMAGE.
*  ===================================================================
*
*  HEADER_END
*/

ENTRIES
	_NVPROT _NVOPT 
END

NAMES END /* CodeWarrior will pass all the needed files to the linker by command line. But here you may add your own files too. */

SECTIONS /* here all RAM/ROM areas of the device are listed. Used in PLACEMENT below. */
  Z_RAM  = READ_WRITE 0x0060 TO 0x00FF; 
  RAM    = READ_WRITE 0x0100 TO 0x0A5F;
  ROM    = READ_ONLY  0xFE00 TO 0xFFAF;
  NVPROTROM = READ_ONLY 0xFFBD TO 0xFFBD;
  NVOPTROM  = READ_ONLY 0xFFBF TO 0xFFBF;
END

PLACEMENT /* Here all predefined and user segments are placed into the SEGMENTS defined above. */
    DEFAULT_RAM                         INTO  RAM;
    DEFAULT_ROM, ROM_VAR, STRINGS       INTO  ROM; /* ROM1,ROM2 In case you want to use ROM1,ROM2 as well, be sure the option -OnB=b is passed to the compiler. */
    _DATA_ZEROPAGE, MY_ZEROPAGE         INTO  Z_RAM;
  NVPROT_ROM					INTO NVPROTROM;
  NVOPT_ROM						INTO NVOPTROM;
END


STACKSIZE 0x50

VECTOR 0 main /* Reset vector: this is the default entry point for an application. */

INIT main